* Ensure Date objects are handled correctly when passed to the fusebox Object function. [jddalton]

* Avoid adding a constructor property to the fuse.Object.prototype so objects created will work correctly in for-in loops. [jddalton]

* Reduce unnecessary code for sandboxes. [jddalton]

* Fix regression with Firefox 1.5. [jddalton]

* Remove [[Class]] fallback for the standalone Fusebox. [jddalton]

* Ensure the document object exists before trying to access properties off of it. [jddalton]

* Simplify the private object from() function. [jddalton]

* Reduce the prototype chain method lookup by one for the __proto__ fork. [jddalton]

* Allow Array constructor to throw errors if its passed an invalid length. [jddalton, kangax]

* Remove method wrapping for Array#sort in the __proto__ fork. [jddalton]

* Ensure `reStrict` detects the strict mode directive correctly. [jddalton, kangax, Kit Goncharov]

* Add supplemental checks for the Firefox iframe issue with sandboxed natives. [jddalton]

* Correct sandbox mode detection for Safari to avoid iframes. [jddalton, Kit Goncharov]

* Fix reference to postProcess() when it's redefined. [jddalton]

* Fix memory leak associated with ActiveX technique. [jddalton, Sebastian Werner]

* Add Fusebox.getMode() and Fusebox.setMode() methods. [jddalton]

* Fix Firefox bug when adding and then removing iframes before dom load. [getify, jddalton]

* Rewrite Fusebox to use iframes by default. [jddalton]

* Fix fuse.Fusebox'ed Array#map when the SKIP_METHODS_RETURNING_ARRAYS true. [jddalton]

* Ensure Fuse.Fusebox'ed String#search passes the correct arguments to its internal method. [jddalton]

* Make the fuse.Fusebox'ed Object constructor, when called as a function and passed a native RegExp instance, return a Fuseboxed RegExp instance. [jddalton]

* Fix fuse.Fusebox'ed String#match and RegExp#exec to allow returning arrays containing undefined values. [jddalton]

* Fix fuse.Fusebox wrappers for Number methods toExponential(), toFixed(), and toPrecision(). [jddalton]

* Ensure fuse.Fusebox Native methods that return arrays set index values in accending order so de facto order is preserved in for-in loops. [jddalton]

* Add `instance` argument to fuse.Fusebox() allowing a custom object to be used as the base which sandboxed natives are attached to. [jddalton]

* Make the constructor's prototype values of the OBJECT__PROTO__ branch conform to ECMA specifications. [jddalton]

* Add sandboxed Boolean constructor. [jddalton]

* Add the overlooked reverse() and splice() methods to the sandboxed Array.prototype. [jddalton]

* Add the overlooked sort() method to the sandboxed Array.prototype. [jddalton]